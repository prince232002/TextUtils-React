{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","cursor","TextForm","useState","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","contactText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","document","body","classList","remove","console","log","add","Date","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAIe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAASH,UAAU,iBAAkBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA9L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SAEI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBASR,sBAAKF,UAAU,SAAf,UACI,qBAAKA,UAAU,2BAA2BM,QAAS,WAAKP,EAAMQ,WAAW,YAAaC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,OAAO,aAClI,qBAAKX,UAAU,0BAA0BM,QAAS,WAAKP,EAAMQ,WAAW,WAAYC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,OAAO,aAChI,qBAAKX,UAAU,2BAA2BM,QAAS,WAAKP,EAAMQ,WAAW,YAAaC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,OAAO,aAClI,qBAAKX,UAAU,2BAA2BM,QAAS,WAAKP,EAAMQ,WAAW,YAAaC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,OAAO,aAClI,qBAAKX,UAAU,yBAAyBM,QAAS,WAAKP,EAAMQ,WAAW,UAAWC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,OAAO,aAC9H,qBAAKX,UAAU,wBAAwBM,QAAS,WAAKP,EAAMQ,WAAW,SAAUC,MAAO,CAACC,OAAO,OAAQC,MAAM,OAAQC,OAAO,wBC5BrI,SAASC,EAASb,GAC7B,IAmCA,EAAwBc,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACI,qCACA,sBAAKf,UAAU,YAAYQ,MAAO,CAACQ,MAAoB,SAAbjB,EAAME,KAAc,QAAQ,WAAtE,UACI,oBAAID,UAAU,OAAd,SAAsBD,EAAMkB,UAC5B,qBAAKjB,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAekB,MAAOJ,EAAMK,SAzBjC,SAACC,GACpBL,EAAQK,EAAMC,OAAOH,QAwByDV,MAAO,CAACc,gBAA8B,SAAbvB,EAAME,KAAc,UAAU,QAASe,MAAoB,SAAbjB,EAAME,KAAc,QAAQ,WAAYI,GAAG,QAAQkB,KAAK,QAEzM,wBAAQC,SAAwB,IAAdV,EAAKW,OAAYzB,UAAU,4BAA4BM,QA7C3D,WAClB,IAAIoB,EAAUZ,EAAKa,cACnBZ,EAAQW,GACR3B,EAAM6B,UAAU,0BAA2B,YA0CvC,kCACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAYzB,UAAU,4BAA4BM,QAxC3D,WAClB,IAAIoB,EAAUZ,EAAKe,cACnBd,EAAQW,GACR3B,EAAM6B,UAAU,0BAA2B,YAqCvC,kCACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAYzB,UAAU,4BAA4BM,QAnCxD,WAErBS,EADc,IAEdhB,EAAM6B,UAAU,gBAAiB,YAgC7B,wBACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAYzB,UAAU,4BAA4BM,QAzB9D,WACfwB,UAAUC,UAAUC,UAAUlB,GAC9Bf,EAAM6B,UAAU,uBAAwB,YAuBpC,uBACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAYzB,UAAU,4BAA4BM,QApBvD,WACtB,IAAIoB,EAAUZ,EAAKmB,MAAM,QACzBlB,EAAQW,EAAQQ,KAAK,MACrBnC,EAAM6B,UAAU,wBAAyB,YAiBrC,oCAEJ,sBAAK5B,UAAU,iBAAiBQ,MAAO,CAACQ,MAAoB,SAAbjB,EAAME,KAAc,QAAQ,WAA3E,UACI,oDACA,8BAAIa,EAAKmB,MAAM,OAAOE,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQX,UAAaA,OAArE,cAAwFX,EAAKW,OAA7F,iBACA,8BAAI,KAASX,EAAKmB,MAAM,OAAOE,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQX,UAAaA,OAA9E,mBACA,yCACA,4BAAIX,EAAKW,OAAO,EAAEX,EAAK,8BDdnChB,EAAOuC,aAAe,CAClBlC,MAAO,iBACPmC,UAAW,QACXC,YAAY,WEjCDC,MAdf,SAAezC,GAKX,OACI,qBAAKS,MAAO,CAACC,OAAQ,QAArB,SACCV,EAAM0C,OAAS,sBAAKzC,UAAS,sBAAiBD,EAAM0C,MAAMrC,KAA7B,gCAAiEsC,KAAK,QAApF,UACb,iCAPY,SAACC,GAChB,IAAMC,EAAQD,EAAKd,cACnB,OAAOe,EAAMC,OAAO,GAAGlB,cAAgBiB,EAAME,MAAM,GAKvCC,CAAWhD,EAAM0C,MAAMrC,QADnB,KACqCL,EAAM0C,MAAMO,UCiE1DC,MA7Df,WACE,MAAwBpC,mBAAS,SAAjC,mBAAOZ,EAAP,KAAaiD,EAAb,KACA,EAA0BrC,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcU,EAAd,KAEMvB,EAAY,SAACwB,EAAShD,GACxB+C,EAAS,CACPH,IAAKI,EACLhD,KAAMA,IAERiD,YAAW,WACPF,EAAS,QACV,OAyBP,OACE,qCAEA,cAACrD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMM,WAnBrB,SAAC+C,GANlBC,SAASC,KAAKC,UAAUC,OAAO,YAC/BH,SAASC,KAAKC,UAAUC,OAAO,WAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,aAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAI/BC,QAAQC,IAAIN,GACZC,SAASC,KAAKC,UAAUI,IAAI,MAAMP,GACtB,UAATrD,GACDiD,EAAQ,QACRK,SAASC,KAAKhD,MAAMc,gBAAkB,UACtCM,EAAU,6BAA8B,aAIxCsB,EAAQ,SACRK,SAASC,KAAKhD,MAAMc,gBAAkB,QACtCM,EAAU,8BAA+B,cAMwB,IAAIkC,MACvE,cAAC,EAAD,CAAOrB,MAAOA,IACd,qBAAKzC,UAAU,iBAAf,SAWQ,cAACY,EAAD,CAAUgB,UAAWA,EAAWX,QAAQ,uEAAuEhB,KAAMA,UCtDlH8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,K","file":"static/js/main.f8bbf2a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { a } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button  className=\"navbar-toggler\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" to=\"/about\">{props.aboutText}</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" to=\"/contact\">{props.contactText}</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"bg-primary rounded mx-2 \" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n                        <div className=\"bg-danger rounded mx-2 \" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n                        <div className=\"bg-success rounded mx-2 \" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n                        <div className=\"bg-warning rounded mx-2 \" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n                        <div className=\"bg-light rounded mx-2 \" onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n                        <div className=\"bg-dark rounded mx-2 \" onClick={()=>{props.toggleMode('dark')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n    contactText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About',\r\n    contactText:'Contact'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value) \r\n    }\r\n\r\n    // Credits: A\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text); \r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    // Credits: Coding Wala\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary-</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n// import About from './components/About';\r\n// import Contact from './components/Contact';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// import {\r\n//   BrowserRouter as Router, \r\n//   Switch,\r\n//   Route\r\n// } from \"react-router-dom\";\r\n\r\n \r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n      setAlert({\r\n        msg: message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n          setAlert(null);\r\n      }, 1500);\r\n  }\r\n  const removeBodyClasses=()=>{\r\n    document.body.classList.remove('bg-light')\r\n    document.body.classList.remove('bg-dark')\r\n    document.body.classList.remove('bg-warning')\r\n    document.body.classList.remove('bg-danger')\r\n    document.body.classList.remove('bg-success')\r\n  }\r\n  const toggleMode = (cls)=>{\r\n    removeBodyClasses();\r\n    console.log(cls)\r\n    document.body.classList.add('bg-'+cls)\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n      // document.title = 'Enabled darkmode';\r\n    } \r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }    \r\n  }\r\n  return (\r\n    <>\r\n    {/* <Router> */}\r\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\r\n    <Alert alert={alert}/>\r\n    <div className=\"container my-3\" >\r\n    {/* <Switch> */}\r\n    {/* /users --> Component 1\r\n        /users/home --> Component 2 */}         \r\n          {/* <Route exact path=\"/about\">\r\n            <About mode={mode} />\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact mode={mode} />\r\n          </Route>\r\n          <Route exact path=\"/\"> */}\r\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\r\n          {/* </Route> */}\r\n    {/* </Switch> */}\r\n    </div>\r\n    {/* </Router> */}\r\n    </> \r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}